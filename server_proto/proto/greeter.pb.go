// Code generated by protoc-gen-go. DO NOT EDIT.
// source: greeter.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e585294ab3f34af5, []int{0}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloRespone struct {
	Pid                  uint32   `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRespone) Reset()         { *m = HelloRespone{} }
func (m *HelloRespone) String() string { return proto.CompactTextString(m) }
func (*HelloRespone) ProtoMessage()    {}
func (*HelloRespone) Descriptor() ([]byte, []int) {
	return fileDescriptor_e585294ab3f34af5, []int{1}
}

func (m *HelloRespone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRespone.Unmarshal(m, b)
}
func (m *HelloRespone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRespone.Marshal(b, m, deterministic)
}
func (m *HelloRespone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRespone.Merge(m, src)
}
func (m *HelloRespone) XXX_Size() int {
	return xxx_messageInfo_HelloRespone.Size(m)
}
func (m *HelloRespone) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRespone.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRespone proto.InternalMessageInfo

func (m *HelloRespone) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "proto.HelloRequest")
	proto.RegisterType((*HelloRespone)(nil), "proto.HelloRespone")
}

func init() {
	proto.RegisterFile("greeter.proto", fileDescriptor_e585294ab3f34af5)
}

var fileDescriptor_e585294ab3f34af5 = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x2f, 0x4a, 0x4d,
	0x2d, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x4a, 0x5c,
	0x3c, 0x1e, 0xa9, 0x39, 0x39, 0xf9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42, 0x5c,
	0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x92, 0x02,
	0x5c, 0x4d, 0x71, 0x41, 0x7e, 0x5e, 0xaa, 0x90, 0x00, 0x17, 0x73, 0x41, 0x66, 0x8a, 0x04, 0x93,
	0x02, 0xa3, 0x06, 0x6f, 0x10, 0x88, 0x69, 0x64, 0xc7, 0xc5, 0xee, 0x0e, 0x31, 0x5d, 0xc8, 0x98,
	0x8b, 0x15, 0xac, 0x58, 0x48, 0x18, 0x62, 0x91, 0x1e, 0xb2, 0xf1, 0x52, 0x68, 0x82, 0x60, 0xf3,
	0x94, 0x18, 0x92, 0xd8, 0xc0, 0xa2, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd5, 0xfe, 0xfa,
	0x08, 0xa4, 0x00, 0x00, 0x00,
}
